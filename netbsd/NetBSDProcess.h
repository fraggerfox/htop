/* Do not edit this file. It was automatically generated. */

#ifndef HEADER_NetBSDProcess
#define HEADER_NetBSDProcess
/*
htop - NetBSDProcess.h
(C) 2015 Hisham H. Muhammad
(C) 2015 Michael McConville
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.
*/


typedef enum NetBSDProcessFields {
   // Add platform-specific fields here, with ids >= 100
   LAST_PROCESSFIELD = 100,
} NetBSDProcessField;

typedef struct NetBSDProcess_ {
   Process super;
} NetBSDProcess;

#ifndef Process_isKernelThread
#define Process_isKernelThread(_process) (_process->pgrp == 0)
#endif

#ifndef Process_isUserlandThread
#define Process_isUserlandThread(_process) (_process->pid != _process->tgid)
#endif


extern ProcessClass NetBSDProcess_class;

extern ProcessFieldData Process_fields[];

extern ProcessPidColumn Process_pidColumns[];

NetBSDProcess* NetBSDProcess_new(Settings* settings);

void Process_delete(Object* cast);

void NetBSDProcess_writeField(Process* this, RichString* str, ProcessField field);

long NetBSDProcess_compare(const void* v1, const void* v2);

bool Process_isThread(Process* this);

#endif
